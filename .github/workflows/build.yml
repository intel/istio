name: Build

on:
  push:
    branches: [ release-*-intel ]
    tags:
    - '*'   
  pull_request:
    branches: [ release-*-intel ]

env:
  HUB: ghcr.io/${{ github.repository }}

jobs:
  build:
    runs-on: self-hosted
    environment:
      name: dev

    env:
      DOCKER_TARGETS: docker.pilot docker.istioctl docker.operator docker.install-cni
      TAG: ${{ github.base_ref || github.ref_name }} 
    steps:
    - uses: actions/checkout@v3.3.0

    - name: Copy Licenses
      run: |
        ./.github/workflows/copy-license.sh

    - name: Build Containers
      run: |
        VERSION=${TAG} make docker

    - name: Build Container Proxyv2
      run: |
        ./.github/workflows/build.sh
      env:
        UPDATE_BRANCH: ${{ github.base_ref || github.ref_name }} 

    - name: Install Trivy
      run: |
        wget https://github.com/aquasecurity/trivy/releases/download/v0.44.1/trivy_0.44.1_Linux-64bit.tar.gz
        tar zxvf trivy_0.44.1_Linux-64bit.tar.gz
        sudo mv trivy /usr/local/bin/
    
    - name: Run Trivy in GitHub SBOM mode and submit results to Dependency Graph
      uses: aquasecurity/trivy-action@0.11.2
      with:
        image-ref: ${HUB}/proxyv2:${TAG}
        format: 'github'
        output: 'dependency-results.sbom.json'
        github-pat: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to the container registry
      uses: docker/login-action@v2.1.0
      with:
        registry: ${{ env.HUB }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Containers
      if: ${{ github.event_name == 'push' && github.ref_type != 'tag' }}
      run: |
        make push

    - name: Push Container Proxyv2
      if: ${{ github.event_name == 'push' && github.ref_type != 'tag' }}
      run: |
        docker push ${HUB}/proxyv2:${TAG}

    - name: Push Containers With Tag
      if: ${{ github.ref_type == 'tag' }}
      run: |
        VERSION=${TAG} make push
      env:
        TAG: ${{ github.ref_name }}

    - name: Push Container Proxyv2 With Tag
      if: ${{ github.ref_type == 'tag' }}
      run: |
        docker push ${HUB}/proxyv2:${TAG}
      env:
        TAG: ${{ github.ref_name }}
    
    - name: Cleanup Image Resources
      if: always()
      run: |
        docker system prune -f && docker volume rm $(docker volume ls -q --filter dangling=true)
